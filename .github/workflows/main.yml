on: [push]
name: Azure ARM deploy ENode
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:

      # Checkout code
    - uses: actions/checkout@main

      # Log into Azure
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZDEPLOY }}

      # Deploy ARM template
    - name: Run ARM ENODE
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZSUB }}
        resourceGroupName: ${{ secrets.AZRG }}
        template: ./node.json
        parameters: location=northeurope
        parameters: networkSecurityGroupName=enode-neu-01-nsg
        parameters: networkInterfaceName=enode-neu-01-nic
        parameters: networkSecurityGroupRules=[]
        parameters: subnetName=AppSubnet
        parameters: virtualNetworkId=/subscriptions/626cfe49-42f7-458c-a20b-55a5ceee249c/resourceGroups/core-vnet-neu/providers/Microsoft.Network/virtualNetworks/CoreVNet
        parameters: publicIpAddressName=enode-neu-01-ip
        parameters: publicIpAddressType=Static
        parameters: publicIpAddressSku=Standard
        parameters: virtualMachineName=enode-neu-01
        parameters: virtualMachineComputerName=enode-neu-01
        parameters: virtualMachineRG=core-vnet-neu
        parameters: osDiskType=StandardSSD_LRS
        parameters: virtualMachineSize=Standard_B2s
        parameters: adminUsername=azureuser
        parameters: adminpublicKey= ${{ secrets.publickey}}
        parameters: diagnosticsStorageAccountName=corevnetneudiag
        parameters: diagnosticsStorageAccountId=Microsoft.Storage/storageAccounts/corevnetneudiag
        parameters: diagnosticsStorageAccountType=Standard_LRS
        parameters: diagnosticsStorageAccountKind=Storage
        parameters: zone=1
          
      # output containerName variable from template
    - run: echo ${{ steps.deploy.outputs.containerName }}
